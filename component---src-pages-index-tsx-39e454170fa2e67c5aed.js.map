{"version":3,"file":"component---src-pages-index-tsx-39e454170fa2e67c5aed.js","mappings":"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","sources":["webpack://portfolio_site/./src/components/QiitaItems.tsx","webpack://portfolio_site/./src/components/BlogPosts.tsx","webpack://portfolio_site/./src/components/NotePosts.tsx","webpack://portfolio_site/./src/components/MediumPosts.tsx","webpack://portfolio_site/./src/components/DevToPosts.tsx","webpack://portfolio_site/./src/components/Works.tsx","webpack://portfolio_site/./src/components/Language.tsx","webpack://portfolio_site/./src/components/Certification.tsx","webpack://portfolio_site/./src/components/Contribution.tsx","webpack://portfolio_site/./src/components/Career.tsx","webpack://portfolio_site/./src/components/Education.tsx","webpack://portfolio_site/./src/components/Interest.tsx","webpack://portfolio_site/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { createDateFormat } from '../lib/utils'\n\nexport type Post = {\n  node: {\n    id: string\n    title: string\n    created_at: string\n    url: string\n  }\n}\n\ntype QiitaItemsProps = {\n  posts: Post[]\n  user: string\n}\n\nconst QiitaItems: React.FC<QiitaItemsProps> = ({ posts, user }) => {\n  const items = posts.map(post => {\n    const { id, title, created_at, url } = post.node\n    const createdAt = createDateFormat(created_at, 'YYYY-MM-DD')\n\n    return (\n      <li key={id}>\n        {createdAt}\n        <a className=\"item-title\" href={url}>\n          {title}\n        </a>\n      </li>\n    )\n  })\n\n  return (\n    <section id=\"qiita\">\n      <h2>Qiita(Japanese)</h2>\n      <ul className=\"alt\">{items}</ul>\n      <ul className=\"actions\">\n        <li>\n          <a href={`https://qiita.com/${user}`} className=\"button\">\n            Show More Items\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default QiitaItems\n","import React from 'react'\nimport { createDateFormat } from '../lib/utils'\n\nexport type Post = {\n  node: {\n    id: string\n    pubDate: string\n    link: string\n    title: string\n  }\n}\n\ntype BlogPostsProps = {\n  posts: Post[]\n  blogUrl: string\n}\n\nconst BlogPosts: React.FC<BlogPostsProps> = ({ posts, blogUrl }) => {\n  const items = posts.map(post => {\n    const { id, pubDate, link, title } = post.node\n    const createdAt = createDateFormat(pubDate, 'YYYY-MM-DD')\n\n    return (\n      <li key={id}>\n        {createdAt}\n        <a className=\"item-title\" href={link}>\n          {title}\n        </a>\n      </li>\n    )\n  })\n\n  return (\n    <section id=\"blog\">\n      <h2>Hatena Blog(Japanese)</h2>\n      <ul className=\"alt\">{items}</ul>\n      <ul className=\"actions\">\n        <li>\n          <a href={blogUrl} className=\"button\">\n            Show More Items\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default BlogPosts\n","import React from 'react'\nimport { createDateFormat } from '../lib/utils'\n\nexport type Post = {\n  node: {\n    id: string\n    pubDate: string\n    link: string\n    title: string\n  }\n}\n\ntype NotePostsProps = {\n  posts: Post[]\n  NoteUrl: string\n}\n\nconst NotePosts: React.FC<NotePostsProps> = ({ posts, NoteUrl }) => {\n  const items = posts.map(post => {\n    const { id, pubDate, link, title } = post.node\n    const createdAt = createDateFormat(pubDate, 'YYYY-MM-DD')\n\n    return (\n      <li key={id}>\n        {createdAt}\n        <a className=\"item-title\" href={link}>\n          {title}\n        </a>\n      </li>\n    )\n  })\n\n  return (\n    <section id=\"Note\">\n      <h2>note(Japanese)</h2>\n      <ul className=\"alt\">{items}</ul>\n      <ul className=\"actions\">\n        <li>\n          <a href={NoteUrl} className=\"button\">\n            Show More Items\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default NotePosts\n","import React from 'react'\nimport { createDateFormat } from '../lib/utils'\n\nexport type Post = {\n    node: {\n        id: string\n        pubDate: string\n        link: string\n        title: string\n    }\n}\n\ntype MediumPostsProps = {\n    posts: Post[]\n    MediumUrl: string\n}\n\nconst MediumPosts: React.FC<MediumPostsProps> = ({ posts, MediumUrl }) => {\n    const items = posts.map(post => {\n        const { id, pubDate, link, title } = post.node\n        const createdAt = createDateFormat(pubDate, 'YYYY-MM-DD')\n\n        return (\n            <li key={id}>\n                {createdAt}\n                <a className=\"item-title\" href={link}>\n                    {title}\n                </a>\n            </li>\n        )\n    })\n\n    return (\n        <section id=\"Medium\">\n            <h2>Medium(English/Japanese)</h2>\n            <ul className=\"alt\">{items}</ul>\n            <ul className=\"actions\">\n                <li>\n                    <a href={MediumUrl} className=\"button\">\n                        Show More Items\n                    </a>\n                </li>\n            </ul>\n        </section>\n    )\n}\n\nexport default MediumPosts\n","import React from 'react'\nimport { createDateFormat } from '../lib/utils'\n\nexport type Post = {\n    node: {\n        id: string\n        pubDate: string\n        link: string\n        title: string\n    }\n}\n\ntype DevToPostsProps = {\n    posts: Post[]\n    DevToUrl: string\n}\n\nconst DevToPosts: React.FC<DevToPostsProps> = ({ posts, DevToUrl }) => {\n    const items = posts.map(post => {\n        const { id, pubDate, link, title } = post.node\n        const createdAt = createDateFormat(pubDate, 'YYYY-MM-DD')\n\n        return (\n            <li key={id}>\n                {createdAt}\n                <a className=\"item-title\" href={link}>\n                    {title}\n                </a>\n            </li>\n        )\n    })\n\n    return (\n        <section id=\"DevTo\">\n            <h2>DevTo(English)</h2>\n            <ul className=\"alt\">{items}</ul>\n            <ul className=\"actions\">\n                <li>\n                    <a href={DevToUrl} className=\"button\">\n                        Show More Items\n                    </a>\n                </li>\n            </ul>\n        </section>\n    )\n}\n\nexport default DevToPosts\n","import React from 'react'\n\ntype WorksProps = {}\n\nconst Works: React.FC<WorksProps> = () => {\n    const works = [\n        {\n            title: \"[Slide] ペアーズにおける評価ドリブンな AI Agent 開発のご紹介\",\n            subtitle: \"20250508配信AWSウェビナー登壇\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20250508/20250508163215.png\",\n            url: \"https://speakerdeck.com/fukubaka0825/heasuniokeruping-jia-torihunna-ai-agent-kai-fa-nokoshao-jie\",\n            type: \"Slide\",\n            category: \"AI/ML\",\n            year: \"2025\",\n            tags: [\"AI Agent\", \"AWS\", \"MLOps\"]\n        },\n        {\n            title: \"[Slide] ペアーズでの、Langfuseを中心とした評価ドリブンなリリースサイクルのご紹介\",\n            subtitle: \"Langfuse Night #1\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20250212/20250212125705.png\",\n            url: \"https://speakerdeck.com/fukubaka0825/peazudeno-langfusewozhong-xin-tositaping-jia-doribunnaririsusaikurunogoshao-jie\",\n            type: \"Slide\",\n            category: \"LLMOps\",\n            year: \"2025\",\n            tags: [\"Langfuse\", \"LLM\", \"Evaluation\"]\n        },\n        {\n            title: \"[Slide] ペアーズにおけるAmazon Bedrockを⽤いた障害対応⽀援 ⽣成AIツールの導⼊事例\",\n            subtitle: \"20241115配信AWSウェビナー登壇\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20250212/20250212125526.png\",\n            url: \"https://speakerdeck.com/fukubaka0825/peazuniokeruamazon-bedrockwo-itazhang-hai-dui-ying-yuan-cheng-aiturunodao-shi-li-at-20241115pei-xin-awsuebinadeng-tan\",\n            type: \"Slide\",\n            category: \"AIOps\",\n            year: \"2024\",\n            tags: [\"Amazon Bedrock\", \"AIOps\", \"Incident Response\"]\n        },\n        {\n            title: \"[Article] Amazon Bedrock を用いた障害対応報告書とポストモーテム文書自動作成\",\n            subtitle: \"AWS Builders Flash\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20250212/20250212130001.png\",\n            url: \"https://aws.amazon.com/jp/builders-flash/202410/automated-Incident-reports-and-post-mortem/\",\n            type: \"Article\",\n            category: \"AIOps\",\n            year: \"2024\",\n            tags: [\"AWS\", \"Automation\", \"Post-mortem\"]\n        },\n        {\n            title: \"[Slide] SRE NEXT 2022 Steps toward self-service operations in eureka\",\n            subtitle: \"SRE NEXT 2022 Session(20 minutes)\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20230311/20230311221216.png\",\n            url: \"https://sre-next.dev/2022/schedule#jp51\",\n            type: \"Slide\",\n            category: \"SRE\",\n            year: \"2022\",\n            tags: [\"SRE\", \"Self-Service\", \"Operations\"]\n        },\n        {\n            title: \"[Video] SRE Lounge #13「SREの探求」のすゝめ\",\n            subtitle: \"Session(15 minutes)\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20220410/20220410225617.png\",\n            url: \"https://youtu.be/_hfRB_uVqOM?t=401\",\n            type: \"Video\",\n            category: \"SRE\",\n            year: \"2022\",\n            tags: [\"SRE\", \"Career\", \"Community\"]\n        },\n        {\n            title: \"[Slide] SRE NEXT 2022に学ぶこれからのSREキャリア\",\n            subtitle: \"Infra Career Lounge #3 Session(15 minutes)\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20230311/20230311221629.png\",\n            url: \"https://speakerdeck.com/fukubaka0825/sre-next-2022nixue-bukorekarafalsesrekiyaria\",\n            type: \"Slide\",\n            category: \"Career\",\n            year: \"2022\",\n            tags: [\"SRE\", \"Career\", \"Learning\"]\n        },\n        {\n            title: \"[Conference Chair] SRE NEXT 2022\",\n            subtitle: \"Conference Organization\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20220206/20220206163754.jpg\",\n            url: \"https://sre-next.dev/2022/\",\n            type: \"Conference\",\n            category: \"Leadership\",\n            year: \"2022\",\n            tags: [\"Conference\", \"SRE\", \"Leadership\"]\n        },\n        {\n            title: \"[Book] Introduction of SlackBot with Go and AWS CDK\",\n            subtitle: \"Distributed at Gijutsu Shoten 7\",\n            image: \"https://booth.pximg.net/c/620x620/ccb90178-4e2b-495c-903b-72a0febaf8cc/i/1569932/db4070f9-ff8f-48cf-8d97-0c14f9275bc2_base_resized.jpg\",\n            url: \"https://fukubaka.booth.pm/items/1569932\",\n            type: \"Book\",\n            category: \"Development\",\n            year: \"2019\",\n            tags: [\"Go\", \"AWS CDK\", \"SlackBot\"]\n        },\n        {\n            title: \"[Radio] SRE NEXT 2022 with fukubaka0825\",\n            subtitle: \"e34.fm Episode 16\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20220410/20220410175756.png\",\n            url: \"https://e34.fm/16/\",\n            type: \"Radio\",\n            category: \"Interview\",\n            year: \"2022\",\n            tags: [\"Radio\", \"SRE\", \"Interview\"]\n        },\n        {\n            title: \"[Radio] sp.78【Guest: fukubaka0825】How a band member became a fun SRE\",\n            subtitle: \"shiganai.org podcast\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20200313/20200313141825.png\",\n            url: \"https://shiganai.org/ep/sp78-fukubaka0825\",\n            type: \"Radio\",\n            category: \"Interview\",\n            year: \"2020\",\n            tags: [\"Career\", \"SRE\", \"Story\"]\n        },\n        {\n            title: \"[Video] YouTube Channel(VTuber) wapper/nari 🍔 🍔\",\n            subtitle: \"Coming Soon...\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20210425/20210425215110.png\",\n            url: \"https://www.youtube.com/channel/UC81PeviLpHz0oH6GhaqxIpQ\",\n            type: \"Video\",\n            category: \"Entertainment\",\n            year: \"2021\",\n            tags: [\"VTuber\", \"YouTube\", \"Fun\"]\n        },\n        {\n            title: \"[VR Model] VRoid Model wapper 🍔 🍔\",\n            subtitle: \"3D Character Model\",\n            image: \"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20211226/20211226005422.png\",\n            url: \"https://hub.vroid.com/characters/3188723872963240740/models/2207386033305627317\",\n            type: \"VR Model\",\n            category: \"3D\",\n            year: \"2021\",\n            tags: [\"VRoid\", \"3D\", \"Character\"]\n        }\n    ]\n\n    const getCategoryColor = (category: string) => {\n        const colors = {\n            \"AI/ML\": \"bg-gradient-to-r from-purple-500 to-pink-500\",\n            \"LLMOps\": \"bg-gradient-to-r from-indigo-500 to-purple-500\",\n            \"AIOps\": \"bg-gradient-to-r from-blue-500 to-cyan-500\",\n            \"SRE\": \"bg-gradient-to-r from-green-500 to-emerald-500\",\n            \"Career\": \"bg-gradient-to-r from-orange-500 to-red-500\",\n            \"Leadership\": \"bg-gradient-to-r from-yellow-500 to-orange-500\",\n            \"Development\": \"bg-gradient-to-r from-gray-500 to-slate-500\",\n            \"Interview\": \"bg-gradient-to-r from-rose-500 to-pink-500\",\n            \"Entertainment\": \"bg-gradient-to-r from-violet-500 to-purple-500\",\n            \"3D\": \"bg-gradient-to-r from-cyan-500 to-blue-500\"\n        }\n        return colors[category as keyof typeof colors] || \"bg-gradient-to-r from-gray-500 to-gray-600\"\n    }\n\n    const getTypeIcon = (type: string) => {\n        const icons = {\n            \"Slide\": \"📊\",\n            \"Article\": \"📝\",\n            \"Video\": \"🎥\",\n            \"Book\": \"📚\",\n            \"Conference\": \"🎪\",\n            \"Radio\": \"🎙️\",\n            \"VR Model\": \"🥽\"\n        }\n        return icons[type as keyof typeof icons] || \"📄\"\n    }\n\n    return (\n        <section id=\"Works\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-16\">\n                    <h2 className=\"section-title text-5xl font-bold text-gray-900 mb-6\">\n                        Featured <span className=\"text-gradient bg-gradient-to-r from-primary-600 to-purple-600 bg-clip-text text-transparent\">Works</span>\n                    </h2>\n                    <p className=\"section-subtitle text-xl text-gray-600 max-w-3xl mx-auto\">\n                        プロダクション環境での実践、登壇、執筆活動を通じて技術コミュニティに貢献\n                    </p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    {works.map((work, index) => (\n                        <div\n                            key={index}\n                            className=\"group relative bg-white rounded-2xl shadow-soft hover:shadow-strong transition-all duration-300 hover:-translate-y-2 overflow-hidden border border-gray-100\"\n                        >\n                            <div className=\"relative overflow-hidden\">\n                                <img\n                                    src={work.image}\n                                    alt={work.title}\n                                    className=\"w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110\"\n                                />\n                                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                                <div className=\"absolute top-4 left-4 flex gap-2\">\n                                    <span className={`px-3 py-1 rounded-full text-white text-sm font-medium ${getCategoryColor(work.category)}`}>\n                                        {work.category}\n                                    </span>\n                                    <span className=\"px-3 py-1 rounded-full bg-white/90 text-gray-800 text-sm font-medium\">\n                                        {work.year}\n                                    </span>\n                                </div>\n                                <div className=\"absolute top-4 right-4 text-2xl\">\n                                    {getTypeIcon(work.type)}\n                                </div>\n                            </div>\n\n                            <div className=\"p-6\">\n                                <div className=\"mb-3\">\n                                    <span className=\"text-primary-600 text-sm font-semibold tracking-wide uppercase\">\n                                        {work.type}\n                                    </span>\n                                </div>\n                                <h3 className=\"text-lg font-bold text-gray-900 mb-2 line-clamp-2 group-hover:text-primary-600 transition-colors duration-200\">\n                                    {work.title}\n                                </h3>\n                                <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\n                                    {work.subtitle}\n                                </p>\n                                \n                                <div className=\"flex flex-wrap gap-2 mb-4\">\n                                    {work.tags.slice(0, 3).map((tag, tagIndex) => (\n                                        <span\n                                            key={tagIndex}\n                                            className=\"px-2 py-1 bg-primary-50 text-primary-700 text-xs rounded-md font-medium\"\n                                        >\n                                            {tag}\n                                        </span>\n                                    ))}\n                                </div>\n\n                                <a\n                                    href={work.url}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 font-semibold text-sm transition-colors duration-200 group\"\n                                >\n                                    View Details\n                                    <svg className=\"w-4 h-4 transition-transform duration-200 group-hover:translate-x-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                                    </svg>\n                                </a>\n                            </div>\n\n                            <div className=\"absolute inset-0 bg-gradient-to-t from-primary-600/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\" />\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"text-center mt-12\">\n                    <p className=\"text-gray-600\">\n                        More works available on{' '}\n                        <a href=\"https://speakerdeck.com/fukubaka0825\" className=\"text-primary-600 hover:text-primary-700 font-semibold\">Speaker Deck</a>\n                        {' '}and{' '}\n                        <a href=\"https://medium.com/@fukubaka0825\" className=\"text-primary-600 hover:text-primary-700 font-semibold\">Medium</a>\n                    </p>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Works","import React from 'react'\n\ntype LanguageProps = {}\n\nconst Language: React.FC<LanguageProps> = () => {\n    const languages = [\n        {\n            name: \"Japanese\",\n            level: \"Native\",\n            proficiency: 100,\n            description: \"母語として完全にマスター\",\n            flag: \"🇯🇵\",\n            certifications: [],\n            color: \"from-red-500 to-red-600\"\n        },\n        {\n            name: \"English\",\n            level: \"Business\",\n            proficiency: 75,\n            description: \"ビジネスレベルでの円滑なコミュニケーション\",\n            flag: \"🇺🇸\",\n            certifications: [\"TOEIC\", \"Business Communications\"],\n            color: \"from-blue-500 to-blue-600\"\n        }\n    ]\n\n    const getLevelColor = (level: string) => {\n        const colors = {\n            \"Native\": \"bg-gradient-to-r from-emerald-500 to-emerald-600\",\n            \"Business\": \"bg-gradient-to-r from-blue-500 to-blue-600\",\n            \"Conversational\": \"bg-gradient-to-r from-yellow-500 to-yellow-600\",\n            \"Basic\": \"bg-gradient-to-r from-gray-500 to-gray-600\"\n        }\n        return colors[level as keyof typeof colors] || \"bg-gradient-to-r from-gray-500 to-gray-600\"\n    }\n\n    const getLevelBadgeText = (level: string) => {\n        const badges = {\n            \"Native\": \"ネイティブ\",\n            \"Business\": \"ビジネス\",\n            \"Conversational\": \"日常会話\",\n            \"Basic\": \"基礎\"\n        }\n        return badges[level as keyof typeof badges] || level\n    }\n\n    return (\n        <section id=\"Language\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-16\">\n                    <h2 className=\"section-title text-5xl font-bold text-gray-900 mb-6\">\n                        Language <span className=\"text-gradient bg-gradient-to-r from-primary-600 to-purple-600 bg-clip-text text-transparent\">Skills</span>\n                    </h2>\n                    <p className=\"section-subtitle text-xl text-gray-600 max-w-3xl mx-auto\">\n                        グローバル環境でのコミュニケーション能力とクロスカルチャーでの協働経験\n                    </p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n                    {languages.map((language, index) => (\n                        <div\n                            key={index}\n                            className=\"group relative bg-white rounded-2xl shadow-soft hover:shadow-strong transition-all duration-300 hover:-translate-y-1 overflow-hidden border border-gray-100\"\n                        >\n                            <div className=\"p-8\">\n                                <div className=\"flex items-center justify-between mb-6\">\n                                    <div className=\"flex items-center gap-4\">\n                                        <div className=\"text-5xl\">{language.flag}</div>\n                                        <div>\n                                            <h3 className=\"text-2xl font-bold text-gray-900 group-hover:text-primary-600 transition-colors duration-200\">\n                                                {language.name}\n                                            </h3>\n                                            <span className={`inline-block px-3 py-1 rounded-full text-white text-sm font-medium ${getLevelColor(language.level)} mt-2`}>\n                                                {getLevelBadgeText(language.level)}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"text-right\">\n                                        <div className=\"text-3xl font-bold text-primary-600\">\n                                            {language.proficiency}%\n                                        </div>\n                                        <div className=\"text-sm text-gray-500\">\n                                            Proficiency\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"mb-6\">\n                                    <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                                        <span>Skill Level</span>\n                                        <span>{language.proficiency}%</span>\n                                    </div>\n                                    <div className=\"skill-bar h-3 bg-gray-200 rounded-full overflow-hidden\">\n                                        <div \n                                            className={`skill-fill h-full bg-gradient-to-r ${language.color} transition-all duration-1000 ease-out`}\n                                            style={{ width: `${language.proficiency}%` }}\n                                        />\n                                    </div>\n                                </div>\n\n                                <p className=\"text-gray-600 mb-6 leading-relaxed\">\n                                    {language.description}\n                                </p>\n\n                                {language.certifications.length > 0 && (\n                                    <div>\n                                        <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Certifications & Skills</h4>\n                                        <div className=\"flex flex-wrap gap-2\">\n                                            {language.certifications.map((cert, certIndex) => (\n                                                <span\n                                                    key={certIndex}\n                                                    className=\"px-3 py-1 bg-primary-50 text-primary-700 text-xs rounded-full font-medium\"\n                                                >\n                                                    {cert}\n                                                </span>\n                                            ))}\n                                        </div>\n                                    </div>\n                                )}\n\n                                {/* Interactive elements */}\n                                <div className=\"mt-6 pt-6 border-t border-gray-100\">\n                                    <div className=\"grid grid-cols-2 gap-4 text-center\">\n                                        <div className=\"p-3 bg-gray-50 rounded-lg\">\n                                            <div className=\"text-2xl mb-1\">💼</div>\n                                            <div className=\"text-xs text-gray-600\">Business</div>\n                                            <div className=\"text-sm font-semibold text-gray-800\">\n                                                {language.level === \"Native\" ? \"Perfect\" : language.level === \"Business\" ? \"Fluent\" : \"Good\"}\n                                            </div>\n                                        </div>\n                                        <div className=\"p-3 bg-gray-50 rounded-lg\">\n                                            <div className=\"text-2xl mb-1\">🎯</div>\n                                            <div className=\"text-xs text-gray-600\">Technical</div>\n                                            <div className=\"text-sm font-semibold text-gray-800\">\n                                                {language.level === \"Native\" ? \"Expert\" : language.level === \"Business\" ? \"Advanced\" : \"Intermediate\"}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Hover effect overlay */}\n                            <div className=\"absolute inset-0 bg-gradient-to-t from-primary-600/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\" />\n                        </div>\n                    ))}\n                </div>\n\n                {/* Global Experience Section */}\n                <div className=\"mt-16 text-center\">\n                    <div className=\"bg-gradient-to-r from-primary-50 to-purple-50 rounded-2xl p-8 border border-primary-100\">\n                        <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                            International Experience\n                        </h3>\n                        <p className=\"text-gray-600 mb-6 max-w-2xl mx-auto\">\n                            グローバル企業での多国籍チームでの協働経験を通じて、\n                            技術的なコミュニケーションからビジネス議論まで幅広い場面での\n                            英語コミュニケーション能力を実践で身につけています。\n                        </p>\n                        <div className=\"flex justify-center gap-8 text-center\">\n                            <div>\n                                <div className=\"text-3xl font-bold text-primary-600\">5+</div>\n                                <div className=\"text-sm text-gray-600\">Years Experience</div>\n                            </div>\n                            <div>\n                                <div className=\"text-3xl font-bold text-primary-600\">10+</div>\n                                <div className=\"text-sm text-gray-600\">Countries Collaborated</div>\n                            </div>\n                            <div>\n                                <div className=\"text-3xl font-bold text-primary-600\">100+</div>\n                                <div className=\"text-sm text-gray-600\">International Meetings</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Language","import React from 'react'\n\ntype CertificationProps = {}\n\nconst Certification: React.FC<CertificationProps> = () => {\n    const certifications = [\n        {\n            date: \"2021-11\",\n            name: \"AWS Certified Machine Learning - Specialty\"\n        },\n        {\n            date: \"2019-03\", \n            name: \"AWS Certified Solutions Architect Associate\"\n        },\n        {\n            date: \"2018-11\",\n            name: \"Fundamental Information Technology Engineer Examination(基本情報技術者)\"\n        },\n        {\n            date: \"2018-04\",\n            name: \"TOEIC 850\"\n        },\n        {\n            date: \"2016-04\",\n            name: \"The Official Business Skill Test in Book-keeping,3rd grade(日商簿記3級)\"\n        }\n    ]\n\n    return (\n        <section id=\"Certification\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"section-title text-3xl font-light text-gray-800 mb-6\">\n                        Certification\n                    </h2>\n                </div>\n\n                <div className=\"max-w-4xl mx-auto\">\n                    <div className=\"space-y-3\">\n                        {certifications.map((cert, index) => (\n                            <div\n                                key={index}\n                                className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-5 hover:shadow-md transition-all duration-500 hover:-translate-y-px\"\n                            >\n                                <div className=\"flex items-center justify-between\">\n                                    <h3 className=\"text-base font-medium text-gray-800\">\n                                        {cert.name}\n                                    </h3>\n                                    <span className=\"text-sm text-gray-500 font-normal\">\n                                        {cert.date}\n                                    </span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Certification","import React from 'react'\n\ntype ContributionProps = {}\n\nconst Contribution: React.FC<ContributionProps> = () => {\n    const contributions = [\n        {\n            repository: \"terraform-providers/terraform-provider-aws\",\n            description: \"Official AWS Provider for Terraform\",\n            url: \"https://github.com/terraform-providers/terraform-provider-aws/pulls?utf8=%E2%9C%93&q=is%3Aopen+is%3Apr+author%3Afukubaka0825+state%3Aclosed+\",\n            language: \"Go\",\n            icon: \"☁️\",\n            color: \"from-orange-500 to-red-500\"\n        },\n        {\n            repository: \"mercari/tfnotify\",\n            description: \"Slack notification for Terraform CI/CD workflows\",\n            url: \"https://github.com/mercari/tfnotify/pulls?q=is%3Apr+author%3Afukubaka0825+is%3Aclosed\",\n            language: \"Go\",\n            icon: \"🔔\",\n            color: \"from-blue-500 to-indigo-500\"\n        },\n        {\n            repository: \"evalphobia/aws-sdk-go-wrapper\",\n            description: \"Simplified wrapper for AWS SDK Go\",\n            url: \"https://github.com/evalphobia/aws-sdk-go-wrapper/pulls?q=is%3Apr+author%3Afukubaka0825+is%3Aclosed\",\n            language: \"Go\",\n            icon: \"⚡\",\n            color: \"from-green-500 to-emerald-500\"\n        }\n    ]\n\n\n    const getLanguageColor = (language: string) => {\n        const colors = {\n            \"Go\": \"bg-cyan-500\",\n            \"Python\": \"bg-yellow-500\",\n            \"TypeScript\": \"bg-blue-500\",\n            \"JavaScript\": \"bg-yellow-400\"\n        }\n        return colors[language as keyof typeof colors] || \"bg-gray-500\"\n    }\n\n    return (\n        <section id=\"Contribution\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"section-title text-3xl font-light text-gray-800 mb-6\">\n                        Open Source Contributions\n                    </h2>\n                </div>\n\n                {/* Open Source Contributions */}\n                <div className=\"mb-20\">\n                    <h3 className=\"text-xl font-medium text-gray-700 mb-6 text-center\">\n                        Code Contributions\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                        {contributions.map((contrib, index) => (\n                            <div\n                                key={index}\n                                className=\"group relative bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-500 hover:-translate-y-1 border border-gray-100 overflow-hidden\"\n                            >\n                                {/* Header */}\n                                <div className=\"bg-gray-50 border-b border-gray-100 p-5\">\n                                    <div className=\"flex items-start justify-between mb-3\">\n                                        <div className=\"text-2xl\">{contrib.icon}</div>\n                                        <span className={`px-2 py-1 rounded-md text-white text-xs font-normal ${getLanguageColor(contrib.language)}`}>\n                                            {contrib.language}\n                                        </span>\n                                    </div>\n                                    <h4 className=\"text-base font-medium text-gray-800 mb-2 leading-tight\">\n                                        {contrib.repository}\n                                    </h4>\n                                    <p className=\"text-gray-600 text-sm mb-3 leading-relaxed\">\n                                        {contrib.description}\n                                    </p>\n                                </div>\n\n                                {/* Content */}\n                                <div className=\"p-5\">\n                                    <a\n                                        href={contrib.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"inline-flex items-center gap-2 text-gray-600 hover:text-gray-800 font-normal text-sm transition-colors duration-300\"\n                                    >\n                                        View Contributions\n                                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                                        </svg>\n                                    </a>\n                                </div>\n\n                                {/* Hover effect overlay */}\n                                <div className=\"absolute inset-0 bg-gray-50 opacity-0 group-hover:opacity-30 transition-opacity duration-500 pointer-events-none\" />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n\n            </div>\n        </section>\n    )\n}\n\nexport default Contribution","import React from 'react'\n\ntype CareerProps = {}\n\nconst Career: React.FC<CareerProps> = () => {\n    const careers = [\n        {\n            position: \"Senior Software Engineer\",\n            department: \"Machine Learning/MLOps/AIOps\",\n            company: \"Match Group (eureka, Inc.)\",\n            companyUrl: \"https://mtch.com/\",\n            period: \"July 2022 〜 Present\",\n            location: \"Tokyo, Japan\",\n            type: \"Full-time\",\n            highlights: [\n                \"オンラインデートサービス（1500万人超、3地域）Pairs（モデレーションシステム）の運営\",\n                \"MLシステムモニタリングの向上（モニタリング指標の再定義・実装）\",\n                \"テキストモデレーション精度・再現率の改善\",\n                \"テキストモデレーションMLモデル・パイプラインの再構築\",\n                \"Langfuseを活用した評価ドリブンリリースサイクルのLLMOps基盤設計・実装\",\n                \"Amazon Bedrockを用いた障害対応報告書・ポストモーテム文書自動作成（AIOps）\"\n            ],\n            technologies: [\"Python\", \"Go\", \"GCP\", \"Datadog\", \"Langfuse\", \"Amazon Bedrock\", \"MLOps\", \"LLMOps\"],\n            icon: \"🤖\",\n            color: \"from-purple-500 to-indigo-500\"\n        },\n        {\n            position: \"Senior Software Engineer\",\n            department: \"Site Reliability Engineering\",\n            company: \"Match Group (eureka, Inc.)\",\n            companyUrl: \"https://mtch.com/\",\n            period: \"March 2022 〜 June 2022\",\n            location: \"Tokyo, Japan\",\n            type: \"Full-time\",\n            highlights: [\n                \"SREチームのVision・Mission・Valuesの再構築\",\n                \"Pairs本体サーバーのAmazon ECS on FARGATEからAmazon EKS on EC2への移行\",\n                \"kubernetesセキュリティ全体設計・gatekeeper/conftestの実装\"\n            ],\n            technologies: [\"Kubernetes\", \"AWS EKS\", \"ECS\", \"Terraform\", \"Gatekeeper\", \"Conftest\"],\n            icon: \"🛡️\",\n            color: \"from-green-500 to-emerald-500\"\n        },\n        {\n            position: \"Site Reliability Engineer\",\n            department: \"Infrastructure & Operations\",\n            company: \"Match Group (eureka, Inc.)\",\n            companyUrl: \"https://mtch.com/\",\n            period: \"March 2020 〜 March 2022\",\n            location: \"Tokyo, Japan\",\n            type: \"Full-time\",\n            highlights: [\n                \"Infra Delivery Processの置き換え（Terraform、Terraform Cloud、Github Actions）\",\n                \"BotOps・CIOpsによるセルフサービス化\",\n                \"ポストモーテムテンプレート・PlayBook（RunBook）の導入\",\n                \"Pairs Engageサーバーの AWS EC2 から FARGATE への移行\",\n                \"ユーザーメッセージデータのRDSからDynamoDBへの移行・暗号化\",\n                \"Data Lifecycle Policy Systemの設計・実装\",\n                \"GPUを用いた画像モデレーション・不正画像検知の導入\",\n                \"GitOpsの導入（Argocd、Github Actions、AWS providerでのOIDC）\",\n                \"Policy as Codeの導入によるterraformコードレビュープロセスの自動化\"\n            ],\n            technologies: [\"Go\", \"AWS\", \"Terraform\", \"Kubernetes\", \"Docker\", \"ArgoCD\", \"GitOps\", \"GPU\"],\n            icon: \"⚙️\",\n            color: \"from-blue-500 to-cyan-500\"\n        },\n        {\n            position: \"Backend Engineer\",\n            department: \"Software Development\",\n            company: \"Wano Co.,Ltd.\",\n            companyUrl: \"https://wano.co.jp/\",\n            period: \"February 2019 〜 February 2020\",\n            location: \"Tokyo, Japan\",\n            type: \"Full-time\",\n            highlights: [\n                \"音楽配信システム VideoKicks の開発・運用\",\n                \"APIの開発・運用（Go、Clean Architecture）\",\n                \"GitopsによるCDの導入・啓蒙活動\",\n                \"IaC（AWS、Terraform）の導入・啓蒙活動\",\n                \"ChatOps（Slack）の導入・啓蒙活動\",\n                \"検索基盤の事前調査・設計（Elasticsearch、Kibana）\",\n                \"Shop推薦システムの開発\"\n            ],\n            technologies: [\"Go\", \"Clean Architecture\", \"AWS\", \"Terraform\", \"Elasticsearch\", \"MySQL\", \"Redis\"],\n            icon: \"🎵\",\n            color: \"from-orange-500 to-red-500\"\n        },\n        {\n            position: \"System Engineer\",\n            department: \"Financial Systems\",\n            company: \"Mizuho Information & Research Institute, Inc.\",\n            companyUrl: \"https://www.mizuho-ir.co.jp\",\n            period: \"April 2018 〜 January 2019\",\n            location: \"Tokyo, Japan\",\n            type: \"Full-time\",\n            highlights: [\n                \"国際決済基幹システム（メインフレーム）の開発\",\n                \"Swiftシステム準拠プロジェクトのプロジェクトリーダー\",\n                \"要件定義・基本設計\",\n                \"定期保守（PL/I、JCL）\"\n            ],\n            technologies: [\"PL/I\", \"JCL\", \"Mainframe\", \"Swift\", \"Financial Systems\"],\n            icon: \"🏦\",\n            color: \"from-gray-500 to-slate-500\"\n        }\n    ]\n\n    return (\n        <section id=\"Career\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"section-title text-3xl font-light text-gray-800 mb-6\">\n                        Career Journey\n                    </h2>\n                </div>\n\n                <div className=\"relative max-w-5xl mx-auto\">\n                    {/* Timeline line */}\n                    <div className=\"absolute left-6 md:left-1/2 top-0 bottom-0 w-px bg-gray-200 transform md:-translate-x-0.5\"></div>\n\n                    {careers.map((career, index) => (\n                        <div\n                            key={index}\n                            className={`relative flex items-center mb-16 ${\n                                index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'\n                            }`}\n                        >\n                            {/* Timeline dot */}\n                            <div className=\"absolute left-6 md:left-1/2 transform -translate-x-1/2 z-10\">\n                                <div className=\"w-8 h-8 rounded-full bg-white border-2 border-gray-300 shadow-sm flex items-center justify-center text-sm\">\n                                    {career.icon}\n                                </div>\n                            </div>\n\n                            {/* Content card */}\n                            <div className={`w-full md:w-5/12 ml-16 md:ml-0 ${index % 2 === 0 ? 'md:mr-auto md:pr-16' : 'md:ml-auto md:pl-16'}`}>\n                                <div className=\"group bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-500 hover:-translate-y-1 border border-gray-100 overflow-hidden\">\n                                    <div className=\"p-6\">\n                                        <div className=\"mb-4\">\n                                            <div className=\"mb-3\">\n                                                <span className=\"px-2 py-1 rounded-md bg-gray-100 text-gray-600 text-xs font-normal\">\n                                                    {career.type}\n                                                </span>\n                                            </div>\n                                            <h3 className=\"text-lg font-medium text-gray-900 group-hover:text-gray-700 transition-colors duration-300 mb-1\">\n                                                {career.position}\n                                            </h3>\n                                            <p className=\"text-gray-600 font-normal mb-2 text-sm\">\n                                                {career.department}\n                                            </p>\n                                            <a \n                                                href={career.companyUrl}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                className=\"text-base font-medium text-gray-800 hover:text-gray-900 transition-colors duration-300\"\n                                            >\n                                                {career.company}\n                                            </a>\n                                            <div className=\"flex items-center gap-3 mt-2 text-xs text-gray-500\">\n                                                <span>{career.location}</span>\n                                                <span>•</span>\n                                                <span>{career.period}</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"mb-4\">\n                                            <h4 className=\"text-xs font-medium text-gray-600 mb-3 uppercase tracking-wider\">Key Responsibilities</h4>\n                                            <ul className=\"space-y-1\">\n                                                {career.highlights.slice(0, 3).map((highlight, highlightIndex) => (\n                                                    <li key={highlightIndex} className=\"flex items-start gap-2 text-xs text-gray-600 leading-relaxed\">\n                                                        <span className=\"text-gray-400 mt-1\">•</span>\n                                                        <span>{highlight}</span>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n\n                                        <div className=\"mb-4\">\n                                            <h4 className=\"text-xs font-medium text-gray-600 mb-2 uppercase tracking-wider\">Technologies</h4>\n                                            <div className=\"flex flex-wrap gap-1\">\n                                                {career.technologies.slice(0, 6).map((tech, techIndex) => (\n                                                    <span\n                                                        key={techIndex}\n                                                        className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-normal\"\n                                                    >\n                                                        {tech}\n                                                    </span>\n                                                ))}\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    {/* Hover effect overlay */}\n                                    <div className=\"absolute inset-0 bg-gray-50 opacity-0 group-hover:opacity-30 transition-opacity duration-500 pointer-events-none\" />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        </section>\n    )\n}\n\nexport default Career","import React from 'react'\n\ntype EducationProps = {}\n\nconst Education: React.FC<EducationProps> = () => {\n    return (\n        <section id=\"Education\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"section-title text-3xl font-light text-gray-800 mb-6\">\n                        Education\n                    </h2>\n                </div>\n\n                <div className=\"max-w-2xl mx-auto\">\n                    <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-all duration-500\">\n                        <div className=\"bg-gray-50 border-b border-gray-100 p-6\">\n                            <div className=\"flex items-center gap-3\">\n                                <div className=\"text-2xl\">🎓</div>\n                                <div>\n                                    <h3 className=\"text-lg font-medium text-gray-800 mb-1\">Bachelor of Economics</h3>\n                                    <p className=\"text-gray-600 text-sm\">March 2018</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"p-6 text-center\">\n                            <a \n                                href=\"https://www.waseda.jp/fpse/pse/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"text-lg font-medium text-gray-800 hover:text-gray-900 transition-colors duration-300\"\n                            >\n                                Waseda University\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Education","import React, { useState } from 'react'\n\ntype InterestProps = {}\n\nconst Interest: React.FC<InterestProps> = () => {\n    const [selectedCategory, setSelectedCategory] = useState<string | null>(null)\n\n    const skillCategories = [\n        {\n            name: \"SRE/DevOps/AIOps\",\n            icon: \"🛡️\",\n            color: \"from-blue-500 to-cyan-500\",\n            description: \"Site Reliability Engineering and DevOps practices\",\n            skills: [\n                { name: \"Site Reliability Engineering\" },\n                { name: \"DevOps, AIOps, CI/CD\" },\n                { name: \"Observability\" },\n                { name: \"Incident Management\" }\n            ]\n        },\n        {\n            name: \"MLOps/LLMOps/Data Engineering\",\n            icon: \"🤖\",\n            color: \"from-purple-500 to-indigo-500\",\n            description: \"Machine Learning Operations and Data Engineering\",\n            skills: [\n                { name: \"MLOps Pipeline\" },\n                { name: \"LLMOps/Langfuse\" },\n                { name: \"Data Engineering\" },\n                { name: \"Model Monitoring\" }\n            ]\n        },\n        {\n            name: \"ML/NLP\",\n            icon: \"🧠\",\n            color: \"from-pink-500 to-purple-500\",\n            description: \"Machine Learning and Natural Language Processing\",\n            skills: [\n                { name: \"Natural Language Processing\" },\n                { name: \"Text Moderation\" },\n                { name: \"LLM\" },\n                { name: \"Deep Learning\" }\n            ]\n        },\n        {\n            name: \"Programming Languages\",\n            icon: \"💻\",\n            color: \"from-green-500 to-emerald-500\",\n            description: \"Core programming languages and frameworks\",\n            skills: [\n                { name: \"Go\" },\n                { name: \"Python\" },\n                { name: \"Shell Script\" },\n                { name: \"TypeScript\" }\n            ]\n        },\n        {\n            name: \"Container & Orchestration\",\n            icon: \"🐳\",\n            color: \"from-blue-500 to-indigo-500\",\n            description: \"Containerization and orchestration platforms\",\n            skills: [\n                { name: \"Docker\" },\n                { name: \"Kubernetes\" },\n                { name: \"AWS ECS/EKS\" },\n                { name: \"Container Security\" }\n            ]\n        },\n        {\n            name: \"Cloud Infrastructure\",\n            icon: \"☁️\",\n            color: \"from-orange-500 to-red-500\",\n            description: \"Cloud platforms and infrastructure as code\",\n            skills: [\n                { name: \"AWS\" },\n                { name: \"Google Cloud\" },\n                { name: \"Terraform\" },\n                { name: \"Datadog, Sentry\" }\n            ]\n        },\n        {\n            name: \"Application Design\",\n            icon: \"🏗️\",\n            color: \"from-gray-500 to-slate-500\",\n            description: \"Software architecture and design patterns\",\n            skills: [\n                { name: \"Object-Oriented Programming\" },\n                { name: \"Domain-Driven Design\" },\n                { name: \"Clean Architecture\" },\n                { name: \"Microservices\" }\n            ]\n        },\n        {\n            name: \"Policy as Code\",\n            icon: \"📋\",\n            color: \"from-teal-500 to-cyan-500\",\n            description: \"Infrastructure and security policy automation\",\n            skills: [\n                { name: \"Open Policy Agent (OPA)\" },\n                { name: \"Rego\" },\n                { name: \"Conftest\" },\n                { name: \"Security Policies\" }\n            ]\n        }\n    ]\n\n\n    return (\n        <section id=\"Interest\" className=\"section py-20\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"section-title text-3xl font-light text-gray-800 mb-6\">\n                        Skills & Expertise\n                    </h2>\n                </div>\n\n                {/* Skill Categories Grid */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\n                    {skillCategories.map((category, index) => (\n                        <div\n                            key={index}\n                            className={`group relative bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-500 hover:-translate-y-1 cursor-pointer border border-gray-100 overflow-hidden ${\n                                selectedCategory === category.name ? 'ring-2 ring-primary-500 shadow-strong' : ''\n                            }`}\n                            onClick={() => setSelectedCategory(selectedCategory === category.name ? null : category.name)}\n                        >\n                            <div className=\"p-5 text-center\">\n                                <div className=\"text-2xl mb-3\">{category.icon}</div>\n                                <h3 className=\"text-base font-medium text-gray-800 group-hover:text-gray-900 transition-colors duration-300 mb-2\">\n                                    {category.name}\n                                </h3>\n                                <p className=\"text-xs text-gray-500 mb-3 leading-relaxed\">\n                                    {category.description}\n                                </p>\n                                <div className=\"flex justify-center\">\n                                    <span className=\"px-2 py-1 rounded-md bg-gray-100 text-gray-600 text-xs font-normal\">\n                                        {category.skills.length} Skills\n                                    </span>\n                                </div>\n                            </div>\n\n                            {/* Hover effect overlay */}\n                            <div className=\"absolute inset-0 bg-gray-50 opacity-0 group-hover:opacity-50 transition-opacity duration-500 pointer-events-none\" />\n                        </div>\n                    ))}\n                </div>\n\n                {/* Selected Category Detail */}\n                {selectedCategory && (\n                    <div className=\"mb-16\">\n                        {skillCategories\n                            .filter(category => category.name === selectedCategory)\n                            .map((category, index) => (\n                                <div key={index} className=\"bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden\">\n                                    <div className=\"bg-gray-50 border-b border-gray-100 p-5\">\n                                        <div className=\"flex items-center gap-3\">\n                                            <div className=\"text-2xl\">{category.icon}</div>\n                                            <div>\n                                                <h3 className=\"text-lg font-medium text-gray-800 mb-1\">{category.name}</h3>\n                                                <p className=\"text-sm text-gray-600\">{category.description}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"p-5\">\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                            {category.skills.map((skill, skillIndex) => (\n                                                <div key={skillIndex} className=\"py-2\">\n                                                    <div className=\"flex items-center\">\n                                                        <span className=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></span>\n                                                        <span className=\"text-sm font-normal text-gray-700\">{skill.name}</span>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                )}\n\n            </div>\n        </section>\n    )\n}\n\nexport default Interest","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport QiitaItems, { Post as QiitaPost } from '../components/QiitaItems'\nimport Header from '../components/Header'\nimport BlogPosts, { Post as BlogPost } from '../components/BlogPosts'\nimport NotePosts, { Post as NotePost } from '../components/NotePosts'\nimport MediumPosts, { Post as MediumPost } from '../components/MediumPosts'\nimport DevToPosts, { Post as DevToPost } from '../components/DevToPosts'\nimport Head from '../components/Head'\nimport Works  from '../components/Works'\nimport Language  from '../components/Language'\nimport Certification from '../components/Certification'\nimport Contribution from '../components/Contribution'\nimport Career from '../components/Career'\nimport Education from '../components/Education'\nimport Interest from '../components/Interest'\n\ntype User = {\n  name: string\n  github: string\n  twitter: string\n  qiita: string\n  speaker_deck: string\n  facebook: string\n  linkedin: string\n}\n\ntype Skill = {\n  type: string\n  level: number\n}\n\ntype HomeIndexProps = {\n  data: {\n    allFeedQiitaPosts?: {\n      edges: QiitaPost[]\n    }\n    allFeedBlogPosts?: {\n      edges: BlogPost[]\n    }\n    allFeedNotePosts?: {\n      edges: NotePost[]\n    }\n    allFeedMediumPosts?: {\n      edges: MediumPost[]\n    }\n    allFeedDevToPosts?: {\n      edges: DevToPost[]\n    }\n    site: {\n      siteMetadata: {\n        user: User\n        skills: Skill[]\n        blog: {\n          url: string\n        }\n        note: {\n          url: string\n        }\n        medium: {\n          url: string\n        }\n        devto: {\n          url: string\n        }\n      }\n    }\n  }\n}\n\nconst HomeIndex: React.FC<HomeIndexProps> = ({ data }) => {\n  const qiitaPosts = data.allFeedQiitaPosts?.edges?.filter(function (item, index) {\n    return (index <= 9);\n  }) || [];\n  const blogPosts = data.allFeedBlogPosts?.edges?.filter(function (item, index) {\n    return (index <= 4);\n  }) || [];\n  const notePosts = data.allFeedNotePosts?.edges?.filter(function (item, index) {\n    return (index <= 4);\n  }) || [];\n  const mediumPosts = data.allFeedMediumPosts?.edges?.filter(function (item, index) {\n    return (index <= 4);\n  }) || [];\n  const devToPosts = data.allFeedDevToPosts?.edges?.filter(function (item, index) {\n    return (index <= 4);\n  }) || [];\n\n  const {user, skills, blog, note , medium, devto} = data.site.siteMetadata\n\n  return (\n    <Layout>\n      <Head />\n      <Header user={user} />\n      <div id=\"main\">\n        <Interest/>\n        <Career/>\n        <Works/>\n        <Contribution/>\n        <Language/>\n        <Education/>\n        {devToPosts && devToPosts.length > 0 && (\n            <DevToPosts posts={devToPosts} DevToUrl={devto.url} />\n        )}\n        {mediumPosts && mediumPosts.length > 0 && (\n            <MediumPosts posts={mediumPosts} MediumUrl={medium.url} />\n        )}\n        {blogPosts && blogPosts.length > 0 && (\n            <BlogPosts posts={blogPosts} blogUrl={blog.url} />\n        )}\n        {qiitaPosts && qiitaPosts.length > 0 && (\n            <QiitaItems posts={qiitaPosts} user={user.qiita} />\n        )}\n        {notePosts && notePosts.length > 0 && (\n            <NotePosts posts={notePosts} NoteUrl={note.url} />\n        )}\n        <Certification/>\n      </div>\n    </Layout>\n  )\n}\n\nexport default HomeIndex\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        skills {\n          type\n          level\n        }\n        blog {\n          url\n        }\n        note {\n          url\n        }\n        medium {\n          url\n        }\n        devto {\n          url\n        }\n        user {\n          name\n          github\n          qiita\n          speaker_deck\n          twitter\n          facebook\n          linkedin\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","posts","user","items","map","post","id","title","created_at","url","node","createdAt","createDateFormat","React","key","className","href","blogUrl","pubDate","link","NoteUrl","MediumUrl","DevToUrl","Works","subtitle","image","type","category","year","tags","work","index","src","alt","slice","tag","tagIndex","target","rel","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Language","name","level","proficiency","description","flag","certifications","color","language","getLevelBadgeText","style","width","length","cert","certIndex","Certification","date","Contribution","repository","icon","contrib","Career","position","department","company","companyUrl","period","location","highlights","technologies","career","highlight","highlightIndex","tech","techIndex","Education","Interest","selectedCategory","setSelectedCategory","useState","skillCategories","skills","onClick","filter","skill","skillIndex","_data$allFeedQiitaPos","_data$allFeedQiitaPos2","_data$allFeedBlogPost","_data$allFeedBlogPost2","_data$allFeedNotePost","_data$allFeedNotePost2","_data$allFeedMediumPo","_data$allFeedMediumPo2","_data$allFeedDevToPos","_data$allFeedDevToPos2","data","qiitaPosts","allFeedQiitaPosts","edges","item","blogPosts","allFeedBlogPosts","notePosts","allFeedNotePosts","mediumPosts","allFeedMediumPosts","devToPosts","allFeedDevToPosts","blog","note","medium","devto","site","siteMetadata","Layout","Head","Header","DevToPosts","MediumPosts","BlogPosts","QiitaItems","qiita","NotePosts"],"sourceRoot":""}