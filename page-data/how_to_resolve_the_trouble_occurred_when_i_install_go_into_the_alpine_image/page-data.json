{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/how_to_resolve_the_trouble_occurred_when_i_install_go_into_the_alpine_image/","result":{"data":{"site":{"siteMetadata":{"title":"Takashi Narikawa - @fukubaka0825","user":{"name":"Takashi Narikawa","github":"fukubaka0825","qiita":"fukubaka0825","twitter":"fukubaka0825","facebook":"fukubaka0825","linkedin":"takashi-narikawa-889a51187"}}},"markdownRemark":{"html":"<iframe src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/s/st5818129/20210503/20210503172819.jpg\" title=\"by Renée French CC BY 3.0\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 15px; vertical-align: baseline; background: rgb(255, 255, 255); max-width: 500px; color: rgb(77, 77, 77); font-family: TitilliumText22LRegular, &quot;ヒラギノ角ゴ Pro W3&quot;, &quot;Hiragino Kaku Gothic Pro&quot;, メイリオ, Meiryo, &quot;ＭＳ Ｐゴシック&quot;, &quot;MS PGothic&quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; display: block; width: 500px; height: 155px;\"></iframe>\n<h2>Introduction</h2>\n<p>Hi, everyone.</p>\n<p>My name is <a href=\"https://twitter.com/fukubaka0825\">Takashi Narikawa</a>.\nI work as a software engineer at eureka, inc.</p>\n<p>This post is my first post on my blog.\nThis time, I would like to leave a memorandum about the trouble that occurred when I install Go into the alpine image.</p>\n<h2>TL;DR</h2>\n<p>If you want to install Go on an alpine-based image, use apk instead of wget or curl command</p>\n<h2>What I wanted to do</h2>\n<p>I want to auto-deploy lambda with apex command on codebuild (CI) with hashicorp / terraform image.\nBecause I wrote lambda script in Go language, it is necessary to install Go and the hashicorp / terraform image.</p>\n<h2>What Trouble</h2>\n<p>hashicorp / terraform image is based on Alpine. I tried to install Go with buildspec.yml of AWS Codebuild as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shellscript line-numbers\"><code class=\"language-shellscript\">export GO_VERSION=1.12.4\nwget https://storage.googleapis.com/golang/go{GO_VERSION}.linux-amd64.tar.gz\ntar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin\ngo version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Then, when go version command was executed, the following error appeared.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shellscript line-numbers\"><code class=\"language-shellscript\">sh: go: not found</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>How to resolve the trouble</h2>\n<p>docker-How to install Go in alpine Linux-Stack Overflow had a similar case, So it was helpful.</p>\n<blockquote>\n<p>With Alpine, you have libmusl instead of Glibc. Alpine’s libmusl is not a 1 for 1 replacement. Code linked against Glibc will show a not found error which is actually from the dynamic linker. You can see what libraries are linked to the binary with ldd:</p>\n</blockquote>\n<p>Apparently, the behavior of libmusl (Linux standard C library) included instead of Glibc seems to be different.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shellscript line-numbers\"><code class=\"language-shellscript\"># ldd /usr/local/go/bin/go\n        /lib64/ld-linux-x86-64.so.2 (0x7f63ceed1000)\n        libpthread.so.0 =&gt; /lib64/ld-linux-x86-64.so.2 (0x7f63ceed1000)\n        libc.so.6 =&gt; /lib64/ld-linux-x86-64.so.2 (0x7f63ceed1000)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I see, / usr / local / go / bin / go has a dynamic link to / lib64 / ld-linux-x86–64.so.2 and returned not found error.</p>\n<p>This guy’s suggestion is to run Go binaries (do not download go itself) or Glibc (if you use CentOS or Debian), but I didn’t use either solution.</p>\n<p>I solved it by downloading go with apk as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shellscript line-numbers\"><code class=\"language-shellscript\">apk add --update --no-cache vim git make musl-dev go curl\n# Configure Go\nexport GOPATH=/root/go\nexport PATH=${GOPATH}/bin:/usr/local/go/bin:$PATH\nexport GOBIN=$GOROOT/bin\nmkdir -p ${GOPATH}/src ${GOPATH}/bin\nexport GO111MODULE=on\ngo version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>References</h2>\n<p><a href=\"https://stackoverflow.com/questions/52056387/how-to-install-go-in-alpine-linux\">docker — How to install Go in alpine Linux — Stack Overflow</a></p>","frontmatter":{"title":"How to resolve the trouble that occurred when I install Go into the alpine image","date":"03 May, 2021","tags":["Go"]}}},"pageContext":{"slug":"/how_to_resolve_the_trouble_occurred_when_i_install_go_into_the_alpine_image/"}},"staticQueryHashes":["2390163343"],"slicesMap":{}}